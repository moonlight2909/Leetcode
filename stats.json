{"leetcode":{"easy":6,"hard":2,"medium":17,"shas":{"1503-reducing-dishes":{"1503-reducing-dishes.cpp":"14e6fbfac6a9f17b44820b3e684284a60c1ec656","README.md":"fc338dae9ef537cb6634ba5da752ebfab366dd87"},"2379-maximum-total-importance-of-roads":{"2379-maximum-total-importance-of-roads.cpp":"f1a58e9fcabece972470cbaf4efa525919883f80","README.md":"1ccac61a630cbc9ea764f5e5683ff6e4b519f3be","difficulty":"medium"},"README.md":{"":"5a5b4d4f0395a8b82a4ff0f9a54ba634f9305afe"},"1431-all-ancestors-of-a-node-in-a-directed-acyclic-graph":{"1431-all-ancestors-of-a-node-in-a-directed-acyclic-graph.cpp":"4b991af458eeaa5fa30e2efd523b63407a35815a","README.md":"f5fe1b5ad663fb4ef5d22629312b8eab4baa1a53","difficulty":"medium"},"stats.json":{"":"95397e4f49a0faddf445c3c8f9d6cd2baacc794c"},"1701-remove-max-number-of-edges-to-keep-graph-fully-traversable":{"1701-remove-max-number-of-edges-to-keep-graph-fully-traversable.cpp":"cc8b59b08263acd4f128492d0a5fa443f85c52b3","README.md":"c924de671e36749aa33a93f361114425235ad1b5","difficulty":"hard"},"1293-three-consecutive-odds":{"1293-three-consecutive-odds.cpp":"6f599fd286167da2a3c3b9b5ef800df6c95365f3","README.md":"98d26701a6a296df507d9b14e51cc37698d9862d","difficulty":"easy"},"0350-intersection-of-two-arrays-ii":{"README.md":"eb2513b2bde4a5418a904b4d0406e97a03df71e6"},"1078-remove-outermost-parentheses":{"1078-remove-outermost-parentheses.cpp":"eb33c3ce410beafce4b7e59ccf7b0a8ed14c3cc3","README.md":"2f88d2922f26aad0c38cb6211d4f5eab984b05b9","difficulty":"easy"},"0151-reverse-words-in-a-string":{"0151-reverse-words-in-a-string.cpp":"4fda5287896742d201bc0863282b2d6a52be48b3","README.md":"3c297129555a572a5da3aadfd1275e741726ae49","difficulty":"medium"},"0014-longest-common-prefix":{"0014-longest-common-prefix.cpp":"750cf75b36319fecd764de07c92880cd79c5ea6a","README.md":"d3ad55ef459dd3f35715c56d7ad0d5d75a534fc4","difficulty":"easy"},"2032-largest-odd-number-in-string":{"2032-largest-odd-number-in-string.cpp":"95a386deb89bf52cc19bb720dc12588fba928da3","README.md":"621b8fb2453e6b3823012cda7d5e4f4ba7102108"},"0205-isomorphic-strings":{"0205-isomorphic-strings.cpp":"7b7997bea2a0e9227e4dc83e10031b73ac495d2c","README.md":"42d5b546d2e6506fa6c526df7b5ebe0a5b40421f"},"0451-sort-characters-by-frequency":{"0451-sort-characters-by-frequency.cpp":"67d9c7798c06ab721ba325176ecaedaea41bb981","README.md":"1d68915815209b3121f3a0c8ea1168e009173d43","difficulty":"medium"},"0013-roman-to-integer":{"0013-roman-to-integer.cpp":"c1edd6afc44b307048c04b719777dec8c5a86820","README.md":"0cff3a12e3a57725016019dffbd00e1453cced47","difficulty":"easy"},"1737-maximum-nesting-depth-of-the-parentheses":{"README.md":"21e078c4a37b80cd547afcdf8336999c3e6e3a2e"},"0008-string-to-integer-atoi":{"0008-string-to-integer-atoi.cpp":"87a82c00f7b025d85ece0f34195faa7e023af3b2","README.md":"86954a2b8e5477548e143e79c0d51e5c680e42be","difficulty":"medium"},"0022-generate-parentheses":{"0022-generate-parentheses.cpp":"1713dc88f9ad37d47d6b621cfd4c87f7b196c137","README.md":"4c1d0b89e7cce7306187ca037637e6a481f0f8a5"},"0078-subsets":{"0078-subsets.cpp":"b1404c58f8b352a9a23cfabaf22164b1b42974d0","README.md":"fb4b5a7f5abfc5e90375a3cbd0ec5781838463eb","difficulty":"medium"},"1890-sum-of-beauty-of-all-substrings":{"1890-sum-of-beauty-of-all-substrings.cpp":"ff1deb5f4edc6c402728acdb1871de285207bfa2","README.md":"8583b0c49eaccef5e769c732c0a4b2cfb4908721","difficulty":"medium"},"0039-combination-sum":{"0039-combination-sum.cpp":"e97b5141ded1ecad154bd7d351df24b7cd68ba15","README.md":"241b5cec663c0994bf628428fcf6a8d5eddcc4f2","difficulty":"medium"},"0040-combination-sum-ii":{"0040-combination-sum-ii.cpp":"9ebf3881f897f2de3d4962ea3e353370d1cdbe3d","README.md":"326d74f429b6d1be09c063a41a7f9f073b2e64aa","difficulty":"medium"},"0090-subsets-ii":{"0090-subsets-ii.cpp":"7b697697ca62388512abbb5591bcb844b93f6ad3","README.md":"e69a0ad564e32e51e51d495e9bda91b59560e3f1","difficulty":"medium"},"1616-minimum-difference-between-largest-and-smallest-value-in-three-moves":{"1616-minimum-difference-between-largest-and-smallest-value-in-three-moves.cpp":"a311e860c42cedcdd3eb99f8346fcf1b3c3eedf7","README.md":"083aefce25451d9749364b85c6af3781b2fc9a28","difficulty":"medium"},"2299-merge-nodes-in-between-zeros":{"2299-merge-nodes-in-between-zeros.cpp":"d149a873bb0f020a0102b36fcf669b4e57d5d0dd","README.md":"b609dc14321c1ad6cc3c27702f377ba25ff100bf","difficulty":"medium"},"0131-palindrome-partitioning":{"0131-palindrome-partitioning.cpp":"cb898a325e49c3dc0a8cce7067e906fcaaa03955","README.md":"8d1193b850186046367e6f61e71d735ecfe81acf"},"2182-find-the-minimum-and-maximum-number-of-nodes-between-critical-points":{"2182-find-the-minimum-and-maximum-number-of-nodes-between-critical-points.cpp":"6e51938e165ceeff6e932a06d788b6b81305c6c3","README.md":"898d494d80e2297dc3d66dba071cff20c58d72d0","difficulty":"medium"},"1642-water-bottles":{"1642-water-bottles.cpp":"6f787cb30567d20bf5a6288029b3989ccb124ee9","README.md":"68f50f8e7634560543b62c9ff7215a0e5c80a544","difficulty":"easy"},"2645-pass-the-pillow":{"2645-pass-the-pillow.cpp":"faf23eb4dc175842da82fd96329fd230483ec098","README.md":"e930859123aa0e49f81d0d577f19bb55a06c396e","difficulty":"easy"},"1803-average-waiting-time":{"1803-average-waiting-time.cpp":"7b66f6280bbe1721e7041e4a975a0db66c9d55d4","README.md":"b51a67da8abc57eebdb978ca8db4f1447f8712d6","difficulty":"medium"},"1298-reverse-substrings-between-each-pair-of-parentheses":{"1298-reverse-substrings-between-each-pair-of-parentheses.cpp":"34daf99d1bee012bf07bbc18d546e66e8f70a040","README.md":"ccec0874efa75005bace3da4bb49e9d6ece28867","difficulty":"medium"},"2846-robot-collisions":{"2846-robot-collisions.cpp":"fe876fbccbc4ba24ce75a00218b440b2782204cd","README.md":"724be5b4b6f8c457d1f429ad854403cd38071f15","difficulty":"hard"},"0726-number-of-atoms":{"README.md":"a5b147531bb1d46f721bed09549574325e04d506"},"2217-step-by-step-directions-from-a-binary-tree-node-to-another":{"2217-step-by-step-directions-from-a-binary-tree-node-to-another.cpp":"ac10c3ba9b8b41a40c0daa46e773e4269a98fc8e","README.md":"8f972dd5eff902e3c8b5fa6c3a49c1dfd6df6d83","difficulty":"medium"},"2306-create-binary-tree-from-descriptions":{"2306-create-binary-tree-from-descriptions.cpp":"3e0d73dc7347198d820463362f1a9b3e5a728087","README.md":"394d77fa044ffaf11cc7a619798981dbf44cd593","difficulty":"medium"}},"solved":25}}